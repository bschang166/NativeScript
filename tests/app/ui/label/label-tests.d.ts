import * as testModule from "../../ui-test";
import * as LabelModule from "tns-core-modules/ui/label";
export declare class LabelTest extends testModule.UITest<LabelModule.Label> {
    create(): LabelModule.Label;
    test_recycling(): void;
    test_Label_Members(): void;
    snippet_Set_Text_TNS(): void;
    snippet_Set_TextWrap_TNS(): void;
    test_Set_Text_TNS(): void;
    test_Set_Text_Native(): void;
    test_Set_Text_Native_Null(): void;
    test_Set_Text_Native_Undefined(): void;
    test_Set_BackgroundColor_TNS(): void;
    test_Set_BackgroundColor_Native(): void;
    test_label_shrinks_on_text_change(): void;
    test_label_shrinks_on_formatted_text_change(): void;
    test_label_grows_on_text_change(): void;
    test_label_grows_on_formatted_text_change(): void;
    test_measuredWidth_is_not_clipped(): void;
    test_Set_TextWrap_Native(): void;
    test_Set_TextWrapFirstTrueThenFalse_Native(): void;
    test_SetStyleProperties_via_css_class_Native(): void;
    test_SetStyleProperties_via_css_type_TNS(): void;
    test_SetStyleProperties_via_css_id(): void;
    test_BindingToText(): void;
    test_BindingToText_Native(): void;
    test_BindingToText_WithBindingContext(): void;
    private expectedTextAlignment;
    testLocalTextAlignmentFromCss(): void;
    testLocalTextAlignmentFromCssWhenAddingCss(): void;
    testLocalTextAlignmentFromCssWhenAddingCssAllSelectorsAreApplied(): void;
    testLocalTextAlignmentFromCssWhenAddingCssFileAllSelectorsAreApplied(): void;
    testNativeTextAlignmentFromCss(): void;
    testNativeTextAlignmentFromLocal(): void;
    testErrorMessageWhenWrongCssIsAddedWithFile(): void;
    testErrorMessageWhenWrongCssIsAdded(): void;
    test_applying_disabled_visual_State_when_label_is_disable: () => void;
    test_IntegrationTest_Transform_Decoration_Spacing_WithoutFormattedText_DoesNotCrash(): void;
    test_IntegrationTest_Transform_Decoration_Spacing_WithFormattedText_DoesNotCrash(): void;
    private requestLayoutFixture;
    test_SettingTextWhenInFixedSizeGridShouldNotRequestLayout(): void;
    test_ChangingTextWhenInFixedSizeGridShouldNotRequestLayout(): void;
    test_SettingTextWhenFixedWidthAndHeightDoesNotRequestLayout(): void;
    test_ChangingTextWhenFixedWidthAndHeightDoesNotRequestLayout(): void;
    test_SettingTextWhenSizedToContentShouldInvalidate(): void;
    test_ChangingTextWhenSizedToContentShouldInvalidate(): void;
    test_SettingTextOnSingleLineTextWhenWidthIsSizedToParentAndHeightIsSizedToContentShouldRequestLayout(): void;
    test_ChangingTextOnSingleLineTextWhenWidthIsSizedToParentAndHeightIsSizedToContentShouldNotRequestLayout(): void;
    test_SettingTextOnMultilineLineTextWhenWidthIsSizedToParentAndHeightIsSizedToContentShouldRequestLayout(): void;
    test_ChangingTextOnMultilineLineTextWhenWidthIsSizedToParentAndHeightIsSizedToContentShouldRequestLayout(): void;
}
export declare function createTestCase(): LabelTest;
//# sourceMappingURL=label-tests.d.ts.map